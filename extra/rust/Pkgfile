# Description:
# URL:
# Maintainer:
# Depends on: curl cmake libssh2

name=rust
version=1.38.0
release=1
_date=2019-08-15
_rust=1.37.0
_cargo=0.38.0
source=(https://static.rust-lang.org/dist/rustc-$version-src.tar.gz
	https://static.rust-lang.org/dist/$_date/rust-std-$_rust-x86_64-unknown-linux-gnu.tar.gz
	https://static.rust-lang.org/dist/$_date/rustc-$_rust-x86_64-unknown-linux-gnu.tar.gz
	https://static.rust-lang.org/dist/$_date/cargo-$_cargo-x86_64-unknown-linux-gnu.tar.gz)

build() {
	cd rustc-$version-src

	mkdir -p build/cache/$_date
	cp /var/lib/pkg/src/rust-std-$_rust-x86_64-unknown-linux-gnu.tar.gz build/cache/$_date/
	cp /var/lib/pkg/src/rustc-$_rust-x86_64-unknown-linux-gnu.tar.gz build/cache/$_date/
	cp /var/lib/pkg/src/cargo-$_cargo-x86_64-unknown-linux-gnu.tar.gz build/cache/$_date/

cat << EOF > config.toml
# see config.toml.example for more possible options
# See the 8.4 book for an example using shipped LLVM
# e.g. if not installing clang, or using a version before 8.0.
[llvm]
# by default, rust will build for a myriad of architectures
targets = "X86"

# When using system llvm prefer shared libraries
link-shared = true

[build]
# omit docs to save time and space (default is to build them)
docs = false

# install cargo as well as rust
extended = true

[install]
prefix = "/usr"
docdir = "share/doc/rustc"

[rust]
# LLVM crashes when passing an object through ThinLTO twice.  This is triggered when using rust
# code in cross-language LTO if libstd was built using ThinLTO.
# http://blog.llvm.org/2019/09/closing-gap-cross-language-lto-between.html
# https://github.com/rust-lang/rust/issues/54872
codegen-units-std = 1
debuginfo-level = 2
channel = "stable"
rpath = false

# disable codegen tests
codegen-tests = false

[target.x86_64-unknown-linux-gnu]
# NB the output of llvm-config (i.e. help options) may be
# dumped to the screen when config.toml is parsed.
llvm-config = "/usr/bin/llvm-config"

[target.i686-unknown-linux-gnu]
# NB the output of llvm-config (i.e. help options) may be
# dumped to the screen when config.toml is parsed.
llvm-config = "/usr/bin/llvm-config"


EOF

	mkdir "$SRC/rust"
	export CARGO_HOME="$SRC/rust"

	export RUSTFLAGS="$RUSTFLAGS -C link-args=-lffi"
	python3 ./x.py build --exclude src/tools/miri
	export LIBSSH2_SYS_USE_PKG_CONFIG=1
	DESTDIR=$PKG python3 ./x.py install
	rm -r $PKG/usr/share/doc
}
